R
library(tidyverse)
library(ggplot2)
cov <- as.matrix(read.table("/g/data/ht96/Avneet_UQ/recombinant_pop_pca/pcangsd/twenty/lg_twenty.cov", header = F))



#We will also add a column with population assingments
pop <- c("AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
		 ,"AG","AG"                                                                   
		 ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
		 ,"G","G","G","G","G","G","G","G","G","G")
	 
mme.pca <- eigen(cov) #perform the pca using the eigen function. 

eigenvectors = mme.pca$vectors #extract eigenvectors 
pca.vectors = as.data.frame(cbind(pop, eigenvectors)) #combine with our population assignments
df = type_convert(pca.vectors)
pca.eigenval.sum = sum(mme.pca$values) #sum of eigenvalues
varPC1 <- (mme.pca$values[1]/pca.eigenval.sum)*100 #Variance explained by PC1
varPC1 <- round(varPC1,digits=2)
varPC2 <- (mme.pca$values[2]/pca.eigenval.sum)*100 #Variance explained by PC2
varPC2 <- round(varPC2,digits=2)
varPC3 <- (mme.pca$values[3]/pca.eigenval.sum)*100 #Variance explained by PC3
varPC3 <- round(varPC3,digits=2)


#plot PC1 vs PC2 using ggplot
pca = ggplot(data = df, aes(x=V2, y=V3, fill = pop, colour = pop)) +
  geom_point(size = 3, shape = 21) +
  xlab(paste("Principal component 1 (" , varPC1, ")")) +
  ylab(paste("Principal component 2 (" , varPC2, ")"))
pca <- pca + theme_light() + ggtitle("Linkage Group 20")

ggsave(filename = "/g/data/ht96/Avneet_UQ/recombinant_pop_pca/pcangsd/twenty/lg_twenty_pca12_plot.png", plot = pca)

pca_a = ggplot(data = df, aes(x=V2, y=V4, fill = pop, colour = pop)) +
  geom_point(size = 3, shape = 21) +
  xlab(paste("Principal component 1 (" , varPC1, ")")) +
  ylab(paste("Principal component 3 (" , varPC3, ")"))
pca_a <- pca_a + theme_light() + ggtitle("Linkage Group 20")

ggsave(filename = "/g/data/ht96/Avneet_UQ/recombinant_pop_pca/pcangsd/twenty/lg_twenty_pca13_plot.png", plot = pca_a)

pca_b = ggplot(data = df, aes(x=V3, y=V4, fill = pop, colour = pop)) +
  geom_point(size = 3, shape = 21) +
  xlab(paste("Principal component 2 (" , varPC2, ")")) +
  ylab(paste("Principal component 3 (" , varPC3, ")"))
pca_b <- pca_b + theme_light() + ggtitle("Linkage Group 20")

ggsave(filename = "/g/data/ht96/Avneet_UQ/recombinant_pop_pca/pcangsd/twenty/lg_twenty_pca23_plot.png", plot = pca_b)










#pca = ggplot(data = df, aes(x=V2, y=V3)) + geom_point()

#ggsave(filename = "/g/data/ht96/Avneet_UQ/recombinant_pop_pca/pcangsd/two/pca_lg_two_pcangsd_plot.pdf", plot = pca)

#pca.eigenval.sum = sum(mme.pca$values) #sum of eigenvalues
#varPC1 <- (mme.pca$values[1]/pca.eigenval.sum)*100 #Variance explained by PC1
#varPC2 <- (mme.pca$values[2]/pca.eigenval.sum)*100 #Variance explained by PC2
#varPC3 <- (mme.pca$values[3]/pca.eigenval.sum)*100 #Variance explained by PC3
#varPC4 <- (mme.pca$values[4]/pca.eigenval.sum)*100 #Variance explained by PC4
#pca.eigenval.sum = sum(mme.pca$values) #sum of eigenvalues
#varPC1 <- (mme.pca$values[1]/pca.eigenval.sum)*100 #Variance explained by PC1
#varPC2 <- (mme.pca$values[2]/pca.eigenval.sum)*100 #Variance explained by PC2
#varPC3 <- (mme.pca$values[3]/pca.eigenval.sum)*100 #Variance explained by PC3
#varPC4 <- (mme.pca$values[4]/pca.eigenval.sum)*100 #Variance explained by PC4



R

library(tidyverse) #load the tidyverse package for formatting and plotting

#Load the covariance matrix
admix = read_table("~/exercise/day3/Results/MME_LDpruned_ngsAdmix_K2_out.qopt", col_names = F)

#We will also add a column with population assingments
pop <- c("AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
         ,"AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG","AG"
		 ,"AG","AG"                                                                   
		 ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
         ,"G","G","G","G","G","G","G","G","G","G","G","G","G","G","G"
		 ,"G","G","G","G","G","G","G","G","G","G")

admix.id = as.data.frame(cbind(pop, admix))
names(admix.id) = c("pop","q1","q2")

pdf("~/exercises/day3/Results/NGSadmix_LDpruned_K2_plot.pdf")
plot = barplot(t(as.matrix(subset(admix.id, select=q1:q2))), col=c("firebrick","royalblue"), border=NA)
dev.off() 



library(tidyverse) #load the tidyverse package for formatting and plotting

#Load the covariance matrix
cov = read_table("/workdir/arne/physalia_lcwgs_data/data_practicals/Results/MME_ngsAdmix_K2_out.qopt", col_names = F)

#We will also add a column with population assingments
pop <- c("JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA","JIGA"
         ,"PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY","PANY"
         ,"MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS","MBNS"
         ,"MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU","MAQU")

cov.id = as.data.frame(cbind(pop, cov))
names(cov.id) = c("pop","q1","q2")
barplot(t(as.matrix(subset(cov.id, select=q1:q2))), col=c("firebrick","royalblue"), border=NA)

#Save plot as pdf
ggsave(filename = "/workdir/arne/physalia_lcwgs_data/data_practicals/Results/pca_pcangsd_plot.pdf", plot = pca)
